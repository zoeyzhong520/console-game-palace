{"version":3,"sources":["uni-app:///pages_recommend/recommend_search/cgp_recommend_search.js","uni-app:///pages_recommend/recommend_detail/cgp_recommend_detail.js"],"names":["fuzzyQuery","list","keyWord","reg","RegExp","arr","i","length","test","title","push","recommend_search_all_data","Bmob","page","Promise","resolve","reject","query","Query","limit","skip","find","then","res","recommend_detail_getRecord_with_objectId","objectId","uni","showLoading","mask","get","hideLoading","catch","err","recommend_detail_editRecord_with_objectId","set","readCount","save"],"mappings":"+NAMO,IAAMA,EAAa,SAASC,EAAMC,GAGxC,IAFA,IAAIC,EAAM,IAAIC,OAAOF,GACjBG,EAAM,GACDC,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,IAC5BH,EAAIK,KAAKP,EAAKK,GAAGG,QACpBJ,EAAIK,KAAKT,EAAKK,IAGhB,OAAOD,G,eAKD,IAAMM,EAA4B,SAASC,EAAMC,GACvD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE5B,IAAMC,EAAQL,EAAKM,MAAM,oBACzBD,EAAME,MAAM,KACZF,EAAMG,KAAY,IAAPP,GACXI,EAAMI,OAAOC,MAAK,SAAAC,GACjBR,EAAQQ,U,2NCxBJ,IAAMC,EAA2C,SAASZ,EAAMa,GACtE,OAAO,IAAIX,SAAQ,SAACC,EAASC,GAE5BU,EAAIC,YAAY,CACfC,MAAM,IAGP,IAAMX,EAAQL,EAAKM,MAAM,iBACzBD,EAAMY,IAAIJ,GAAUH,MAAK,SAAAC,GACxBG,EAAII,cACJf,EAAQQ,MACNQ,OAAM,SAAAC,GACRN,EAAII,cACJd,EAAOgB,U,6CAQH,IAAMC,EAA4C,SAASrB,EAAMa,GACvE,OAAO,IAAIX,SAAQ,SAACC,EAASC,GAE5B,IAAMC,EAAQL,EAAKM,MAAM,oBACzBD,EAAMY,IAAIJ,GAAUH,MAAK,SAAAC,GAExBA,EAAIW,IAAI,aAAiBX,EAAIY,UAAgBZ,EAAIY,UAAR,GAAmB,GAC5DZ,EAAIa,OAAOd,MAAK,SAAAC,GAEfR,EAAQQ,MACNQ,OAAM,SAAAC,GACRhB,EAAOgB,SAEND,OAAM,SAAAC,GACRhB,EAAOgB,U","file":"pages_recommend/common/vendor.js","sourcesContent":["/**\n * 使用test方法实现模糊查询\n * @param  {Array}  list     原数组\n * @param  {String} keyWord  查询的关键词\n * @return {Array}           查询的结果\n */\nexport const fuzzyQuery = function(list, keyWord) {\n\tvar reg = new RegExp(keyWord);\n\tvar arr = [];\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (reg.test(list[i].title)) {\n\t\t\tarr.push(list[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n\n// 获取全部数据\n// page 请求的分页页码\nexport const recommend_search_all_data = function(Bmob, page) {\n\treturn new Promise((resolve, reject) => {\n\t\t\n\t\tconst query = Bmob.Query('CGP_HotRecommend')\n\t\tquery.limit(100)\n\t\tquery.skip(page * 100)\n\t\tquery.find().then(res => {\n\t\t\tresolve(res)\n\t\t});\n\t\t\n\t})\n}\n\n","// 通过主键获取一行记录\n// objectId 主键\nexport const recommend_detail_getRecord_with_objectId = function(Bmob, objectId) {\n\treturn new Promise((resolve, reject) => {\n\n\t\tuni.showLoading({\n\t\t\tmask: false\n\t\t})\n\n\t\tconst query = Bmob.Query('CGP_DeviceIds');\n\t\tquery.get(objectId).then(res => {\n\t\t\tuni.hideLoading()\n\t\t\tresolve(res)\n\t\t}).catch(err => {\n\t\t\tuni.hideLoading()\n\t\t\treject(err)\n\t\t})\n\n\t})\n}\n\n// 通过主键修改一行记录\n// objectId 主键\nexport const recommend_detail_editRecord_with_objectId = function(Bmob, objectId) {\n\treturn new Promise((resolve, reject) => {\n\n\t\tconst query = Bmob.Query('CGP_HotRecommend');\n\t\tquery.get(objectId).then(res => {\t\n\t\t\t// 每次打开游戏详情页，给readCount增加1\n\t\t\tres.set('readCount', (!!!res.readCount ? 0 : res.readCount)+1)\n\t\t\tres.save().then(res => {\n\t\t\t\t// console.log(res)\n\t\t\t\tresolve(res)\n\t\t\t}).catch(err => {\n\t\t\t\treject(err)\n\t\t\t})\n\t\t}).catch(err => {\n\t\t\treject(err)\n\t\t})\n\n\t})\n}\n"],"sourceRoot":""}